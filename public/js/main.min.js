!(function (s) {
  'use strict';
  jQuery('nav#dropdown').meanmenu(),
    new WOW().init(),
    s('.product-slider').slick({
      speed: 300,
      slidesToShow: 4,
      slidesToScroll: 1,
      prevArrow:
        '<button type="button" class="slick-prev">p<br />r<br />e<br />v</button>',
      nextArrow:
        '<button type="button" class="slick-next">n<br />e<br />x<br />t</button>',
      responsive: [
        { breakpoint: 1200, settings: { slidesToShow: 3 } },
        { breakpoint: 992, settings: { slidesToShow: 2 } },
        { breakpoint: 768, settings: { slidesToShow: 1 } },
      ],
    }),
    s('.discount-product-slider').slick({
      autoplay: !1,
      arrows: !1,
      dots: !0,
      speed: 500,
      slidesToShow: 1,
      slidesToScroll: 1,
      responsive: [
        { breakpoint: 1169, settings: { slidesToShow: 1 } },
        { breakpoint: 969, settings: { slidesToShow: 1 } },
        { breakpoint: 767, settings: { slidesToShow: 1 } },
      ],
    }),
    s('.brand-slider').slick({
      autoplay: !1,
      arrows: !1,
      dots: !1,
      speed: 300,
      slidesToShow: 4,
      slidesToScroll: 1,
      responsive: [
        { breakpoint: 1169, settings: { slidesToShow: 4 } },
        { breakpoint: 969, settings: { slidesToShow: 3 } },
        { breakpoint: 767, settings: { slidesToShow: 2 } },
        { breakpoint: 480, settings: { slidesToShow: 1 } },
      ],
    }),
    s('.slider-for').slick({
      slidesToShow: 1,
      slidesToScroll: 1,
      arrows: !1,
      fade: !0,
      asNavFor: '.slider-nav',
    }),
    s('.slider-nav').slick({
      slidesToShow: 4,
      slidesToScroll: 1,
      asNavFor: '.slider-for',
      dots: !1,
      arrows: !0,
      centerMode: !1,
      responsive: [{ breakpoint: 480, settings: { slidesToShow: 2 } }],
      focusOnSelect: !0,
      prevArrow:
        '<div class="single-pro-arrow arrow-left"><i class="zmdi zmdi-chevron-left"></i></div>',
      nextArrow:
        '<div class="single-pro-arrow arrow-right"><i class="zmdi zmdi-chevron-right"></i></div>',
    }),
    s(document).delegate('*[data-bs-toggle="lightbox"]', 'click', function (e) {
      e.preventDefault(), s(this).ekkoLightbox();
    }),
    s('.menu-toggle').on('click', function () {
      s(this).hasClass('active')
        ? (s(this).removeClass('active'),
          s('.main-menu').animate({ left: '-225px' }, 500))
        : (s(this).addClass('active'),
          s('.main-menu').animate({ left: '0' }, 500));
    }),
    s('.search-open').on('click', function () {
      s('.sidebar-search').removeClass('slideOutUp').addClass('slideInDown');
    }),
    s('.close-search').on('click', function () {
      s('.sidebar-search').removeClass('slideInDown').addClass('slideOutUp');
    }),
    s('.menu-scroll').niceScroll({
      cursorborder: '1px',
      cursorcolor: '#c87065',
      boxzoom: !0,
    }),
    s('.boxscrol2').niceScroll({
      cursorborder: '0px',
      cursorcolor: '#c87065',
      boxzoom: !0,
    });
  var e = s('#sticky-menu'),
    o = e.position();
  if (e.length) {
    e.offset().top;
    s(window).on('scroll', function () {
      s(window).scrollTop() > o.top
        ? e.addClass('sticky')
        : e.removeClass('sticky');
    });
  }
  s('[data-countdown]').each(function () {
    var e = s(this),
      o = s(this).data('countdown');
    e.countdown(o, function (s) {
      e.html(
        s.strftime(
          '<span class="cdown days"><span class="time-count">%-D</span> <p>Days</p></span> <span class="cdown hour"><span class="time-count">%-H</span> <p>Hour</p></span> <span class="cdown minutes"><span class="time-count">%M</span> <p>Min</p></span>'
        )
      );
    });
  }),
    s('#cat-treeview ul').treeview({
      animated: 'normal',
      persist: 'location',
      collapsed: !0,
      unique: !0,
    }),
    s('#slider-range').slider({
      range: !0,
      min: 1,
      max: 1000,
      values: [
        s('input[name=priceMinR]').val(),
        s('input[name=priceMaxR]').val(),
      ],
      slide: function (e, o) {
        s('#amount-min').val(o.values[0]);
        s('#amount-max').val(o.values[1]);
      },
    }),
    s('#amount-min').val(s('#slider-range').slider('values', 0)),
    s('#amount-max').val(s('#slider-range').slider('values', 1)),
    // s('.cart-plus-minus').prepend('<div class="dec qtybutton">-</div>'),
    // s('.cart-plus-minus').append('<div class="inc qtybutton">+</div>'),
    s('.qtybutton').on('click', function () {
      var e = s(this),
        o = e.parent().find('input').val();
      if ('+' == e.text()) var t = parseFloat(o) + 1;
      else if (o > 1) t = parseFloat(o) - 1;
      else t = 1;
      e.parent().find('input').val(t);
      if (e.hasClass('cartbutton')) {
        UpdateSubtotal(this);
        ReplaceCart(this);
        renderTotalPayment();
      }
    }),
    s('.payment-accordion')
      .find('.payment-accordion-toggle')
      .on('click', function () {
        s(this).next().slideToggle(500),
          s('.payment-content').not(s(this).next()).slideUp(500);
      }),
    s('.payment-accordion-toggle').on('click', function (e) {
      s(this).siblings('.active').removeClass('active'),
        s(this).addClass('active'),
        e.preventDefault();
    }),
    s.scrollUp({
      scrollText: '<i class="zmdi zmdi-triangle-up"></i>',
      easingType: 'linear',
      scrollSpeed: 900,
      animation: 'fade',
    }),
    s('.dropdown .option-btn').on('click', function () {
      s(this).siblings('.dropdown-menu').hasClass('active')
        ? (s(this).siblings('.dropdown-menu').removeClass('active').slideUp(),
          s(this).removeClass('active'))
        : (s('.dropdown .dropdown-menu').removeClass('active').slideUp(),
          s('.dropdown .option-btn').removeClass('active'),
          s(this).addClass('active'),
          s(this).siblings('.dropdown-menu').addClass('active').slideDown());
    }),
    s(function () {
      var e = s('#contact-form'),
        o = s('.form-message');
      s(e).submit(function (t) {
        t.preventDefault();
        var i = s(e).serialize();
        s.ajax({ type: 'POST', url: s(e).attr('action'), data: i })
          .done(function (e) {
            s(o).removeClass('error'),
              s(o).addClass('success'),
              s(o).text(e),
              s('#contact-form input,#contact-form textarea').val('');
          })
          .fail(function (e) {
            s(o).removeClass('success'),
              s(o).addClass('error'),
              '' !== e.responseText
                ? s(o).text(e.responseText)
                : s(o).text(
                    'Oops! An error occured and your message could not be sent.'
                  );
          });
      });
    });
})(jQuery);

function closeNotification() {
  document.querySelector('.overlay').classList.add('fade-out');
  document.querySelector('.overlay').classList.remove('fade-in');
  document.querySelector('body').classList.remove('noscroll');
  document.querySelector('.notification').classList.add('fade-out');
  document.querySelector('.notification').classList.remove('fade-in');
}

function openNotification(text) {
  document.querySelector('.overlay').classList.add('fade-in');
  document.querySelector('.overlay').classList.remove('fade-out');
  document.querySelector('body').classList.add('noscroll');
  document.querySelector('.notification').classList.add('fade-in');
  document.querySelector('.notification').classList.remove('fade-out');
  document.querySelector('.notification-text').innerHTML = text;
}

document
  .querySelector('.notificationButton')
  .addEventListener('click', closeNotification);

document.querySelector('.overlay').addEventListener('click', closeNotification);

const deleteReviewProduct = btn => {
  const productId = btn.parentNode.parentNode.querySelector(
    'input[name=productId]'
  ).value;
  const reviewId = btn.parentNode.parentNode.querySelector(
    'input[name=reviewId]'
  ).value;
  const userId =
    btn.parentNode.parentNode.querySelector('input[name=userId]').value;
  const reviewRating = btn.parentNode.parentNode.querySelector(
    'input[name=reviewRating]'
  ).value;
  const csrf =
    btn.parentNode.parentNode.querySelector('input[name=_csrf]').value;
  fetch('/delete-product-review', {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
      'csrf-token': csrf,
    },
    body: JSON.stringify({
      reviewId: reviewId,
      reviewRating: reviewRating,
      productId: productId,
      userId: userId,
    }),
  })
    .then(result => {
      return result.json();
    })
    .then(data => {
      if (data.message == 'This is not your comment, you cannot delete it') {
        openNotification('This is not your comment, you cannot delete it');
        setTimeout(closeNotification, 3000);
      } else {
        window.location.href = `/products/${productId}`;
      }
    })
    .catch(err => {
      console.log(err);
    });
};
